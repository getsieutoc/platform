// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

enum UserRole {
  ADMIN
  MANAGER
  USER
  SUPPORT
}

model User {
  id            String    @id @default(uuid())
  name          String?
  username      String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  role          UserRole  @default(USER)
  accounts      Account[]
  sessions      Session[]
  projects      Project[]
}

model Account {
  id                       String  @id @default(uuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  refresh_token_expires_in Int?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  oauth_token_secret       String?
  oauth_token              String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id                   String   @id @default(uuid())
  name                 String
  description          String?  @db.Text
  slug                 String   @unique
  customDomain         String?  @unique
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  environmentVariables Json     @default("{\"preview\":{},\"production\":{}}")
  userId               String?
  user                 User?    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  template             String?

  @@index([userId])
}
